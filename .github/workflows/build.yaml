name: Build and Push Docker Image

on: push

jobs:
  #   find-dockerfiles:
  #     runs-on: ubuntu-latest
  #     outputs:
  #       dockerfiles: ${{ steps.set-dockerfiles.outputs.dockerfiles }}
  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v3
  #       - name: Find Dockerfiles
  #         id: set-dockerfiles
  #         run: |
  #           echo "::set-output name=dockerfiles::$(find . -name Dockerfile)"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["foo", "bar"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
          preferLatestVersion: true
      - name: Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: false # todo: change to true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: log
        run: echo ${{ matrix.service }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ${{ vars.REGISTRY_URL }}/platform/platform-ci/${{ matrix.service }}:${{ steps.gitversion.outputs.semVer }}
          platforms: linux/arm64,linux/amd64
